/*
 ============================================================================
 Name        : assembler.c
 Author      : shlomi vaknin
 Version     :
 Copyright   :
 Description : Hello World in C, Ansi-style
 ============================================================================
 */

#include <stdio.h>
#include <stdlib.h>


#define I int
#define A int
#define R return
#define DO1(n,l) {I _i;for(_i=0;_i<l;_i++){l;}}
#define V1(f) A f(A w)
#define V2(f) A f(A a, A w)

V1(square){R w*w;}



int strcmp1(char* a, char* b) {
	int r, i=0;
	while (!(r=((a[i]-b[i]))) && a[i] && b[i++]); return r;
}

#define FIND(l,n,w) {DO(n, !strcmp1(l[_i],w))}



char* (*f[10])(char*) = {NULL};
char* fv[10] = {NULL};
char* fp[10] = {NULL};


char* put(char* f) {
	printf("%s", f);
	return f;
}

char* get(char* f) {
	char* r=malloc(10);
	scanf("%s", r);
	return r;
}


char* ret(char* f) {
	return f;
}
#define _ a

#define DO(f) void f() { int j;int i=0;char* (*f[10])(char*) = {NULL};char* fv[10] = {NULL};
#define PUT(x) f[i]=put;fv[i]=x;
#define GET() f[i]=get;fv[i]=NULL;
#define RETURN(x) f[i]=ret;fv[i]=x;

#define BIND(v,fun) char*v; fun i++;
#define END for(j=0;j<=i;j++) {fv[j+1]=f[j](fv[j]);} printf("%s\n",fv[j]);}

DO(test)
BIND(a, PUT("ass:"))
BIND(b, GET())
BIND(x, RETURN(x));
END
int main( )
{


	int i=0;
	f[i]=put;
	fv[i]="text";

	i++;
	f[i]=get;

	i++;
	f[i]=ret;


	fv[1]=f[0](fv[0]);
	fv[2]=f[1](fv[1]);
	fv[3]=f[2](fv[2]);

	printf(fv[3]);
	return 0;
	/*
	DO(doFunc)
	BIND(_, PUT("name: "))
	BIND(_, GET())
	BIND(x, RETURN(x))
	END

	a->a->m b->m b
	*/


	{
		printf("text");
		{
			char s[1000];
			scanf("%s", s);
			{
				printf("%s", s);
			}
		}
	}


/*
	char* a[] = {"ASS", "FOO", "MORE"};

	printf("%d\n", strcmp1("ASS33", "ASS3"));

	FIND(a, 2, "ASS");

	DO(5, printf("ASS"));
	printf("\n %d", square(3));
    return 0;*/
}
