/*
 * matdsl.c
 *
 *  Created on: Dec 28, 2011
 *      Author: shlomi
 */

#include "matdsl.h"

PF(add_mat)    THREE_MATRIX(add)
PF(sub_mat)    THREE_MATRIX(sub)
PF(mul_mat)    THREE_MATRIX(mul)
PF(trans_mat)  TWO_MATRIX(transMat)
PF(print_mat)  FMAT(first, VERIFY;printMat(Mats[first]))
PF(mul_scalar) FMAT(first, SCALAR(second, MAT(third, VERIFY;mulScalar(Mats[first], second, &Mats[third]))))
PF(read_mat)   FMAT(first, OSCALAR(second, OSCALAR(third, OSCALAR(forth, OSCALAR(fith, initMat(&Mats[first],
				second,  third, forth, fith,
				second,  third, forth, fith,
				second,  third, forth, fith,
				second,  third, forth, fith);)))))

/*PF(read_mat) {
	int matIndex;
	float d[16] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
	int i=0;
	TO_PROCESS;

	if ((p=getMatrixIndex(p, &matIndex, "first", err))) {

		while (i<16 && *p!='\n' && (p = getNumber(strip(charIsE(strip(p, " "), ',', err)," "), &d[i++], err)));

		if (p==NULL && *err == 1) {
			printf("Wrong parameters, parameter %d must be a real number\n", i+1);
			return NULL;
		}
		initMat(&Mats[matIndex],
				d[0],  d[1], d[2], d[3],
				d[4],  d[5], d[6], d[7],
				d[8],  d[9], d[10],d[11],
				d[12], d[13],d[14],d[15]);
	}
	return p;
}
*/
char* getMatrixIndex(char* p, int* matIndex, char* errStr, int* err) {
	TO_PROCESS;

	p = matchWord(strip(p, ", "), "MAT_");
	if (p == NULL) {
		printf("Wrong parameters, %s parameter must be a valid matrix identifier\n", errStr);
		*err = MAT_IDENT_ERR;
		return NULL;
	}
	*matIndex = *(p++)-'A';
	if (*matIndex<0||*matIndex>MAX_MATS-1) {
		printf("Wrong parameters, matrix identifier has to be between MAT_A and MAT_F\n");
		*err = MAT_IDENT_ERR;
		return NULL;
	}

	return p;
}
