#include "parser.h"

/* getline:  read a line, return length */
int getline(char *line, int max)
{
   if (fgets(line, max, stdin) == NULL)
	   return 0;
   else
	   return strlen(line);
}

char* charIsE(char* p, char c, int* err) {
	*err=0;
	if (p!=NULL && *p!='\0'&& *p==c) return ++p;
	*err=CHARIS_ERR;
	return NULL;
}

char* charIs(char* p, char c) {
	if (p!=NULL && *p!='\0'&& *p==c) return ++p;
	return NULL;
}

int contains (char c, char* p) {
	if (*p=='\0') return 0;
	if (*p==c) return 1;
	return contains(c, p+1);
}

char* strip(char* p,char* c) {
	while (p != NULL && *p!='\0' && contains(*p, c)) p++;
	return p;
}

char* or (char* p1, char* p2) {
	if (p1 == NULL) return p2;
	return p1;
}

char* isDigit(char* p) {
	if (*p == '\0') return NULL;
	if (*p>='0'&&*p<='9') return p+1;
	return NULL;
}

char* allDigits(char *p) {
	if (p==NULL || *p=='\0') return NULL;
	if (!isDigit(p)) return p;
	return allDigits(p+1);
}

char* getNumber(char*p, float* res, int* err) {
	char* e;
	char t;
	*res = 0;

	if (p==NULL || *p == '\0') return NULL;

	e = or(charIs(p, '-'), p);
	e = allDigits(e);
	e = or(charIs(e, '.'), e);
	e = or(allDigits(e), e);

	if (e == NULL) 	return e;

	e = strip(e, " ");
	if ((!charIsE(e, ',', err) && !charIsE(e, '\n', err))||e==p) {
		return NULL;
	}
	t = *e;
	*e = '\0';
	*res = (float)atof(p);
	*e=t;
	return e;
}

char* matchWord(char* p, char* m) {
	if (p==NULL || *m=='\0') return p;
	if (*p==*m) return matchWord(p+1, m+1);
	else return NULL;
}

char* matchWordD(char* p, char* m) {
	return charIs(matchWord(p, m), ' ');
}
